#!/usr/bin/env bash
# deploy <build-id> <host-string>

### Environment setup

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" # current direct of script

source "$DIR/lib/output.sh"

ROOT_BUILD_DIR="$DIR/../.tmp"

### Inputs

BUILD_ID=${1:-}
HOST=${2:-}

### Upload

scp -o StrictHostKeyChecking=no "$ROOT_BUILD_DIR/$BUILD_ID.tar.gz" "$HOST:"

### Extract

ssh -o StrictHostKeyChecking=no "$HOST" "mkdir $BUILD_ID; tar -C $BUILD_ID -xf $BUILD_ID.tar.gz; rm $BUILD_ID.tar.gz"

### Deploy

PROFILED_LINE="for script in \$HOME/.profile.d/*; do if [ -r "\\\$script" ]; then . "\\\$script"; fi done"

ssh -o StrictHostKeyChecking=no "$HOST" /bin/bash << EOF

  ln -sfn "$BUILD_ID" latest
  ln -sfn latest/.heroku .
  ln -sfn latest/.profile.d .
  grep -q "$PROFILED_LINE" ".bashrc" || echo "$PROFILED_LINE" >> ".bashrc"

EOF

### Execution

ssh -o StrictHostKeyChecking=no "$HOST" "if [ -a latest/deploy.sh ]; then cd latest; bash deploy.sh; fi"
